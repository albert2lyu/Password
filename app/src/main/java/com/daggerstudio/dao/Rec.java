package com.daggerstudio.dao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 

import android.os.Parcel;
import android.os.Parcelable;

/**
 * Entity mapped to table REC.
 */
public class Rec implements Parcelable{

    private String site_url;
    /** Not-null value. */
    private String site_brief;
    /** Not-null value. */
    private String user_name;
    /** Not-null value. */
    private byte[] encypted_content;
    private String note;
    private Long id;

    public Rec() {
    }

    public Rec(Long id) {
        this.id = id;
    }

    public Rec(String site_url, String site_brief, String user_name, byte[] encypted_content, String note, Long id) {
        this.site_url = site_url;
        this.site_brief = site_brief;
        this.user_name = user_name;
        this.encypted_content = encypted_content;
        this.note = note;
        this.id = id;
    }

    private Rec(Parcel in){
        site_url = in.readString();
        site_brief = in.readString();
        user_name = in.readString();
        encypted_content = new byte[in.readInt()];
        in.readByteArray(encypted_content);
        note = in.readString();
        id = in.readLong();
    }

    public String getSite_url() {
        return site_url;
    }

    public void setSite_url(String site_url) {
        this.site_url = site_url;
    }

    /** Not-null value. */
    public String getSite_brief() {
        return site_brief;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setSite_brief(String site_brief) {
        this.site_brief = site_brief;
    }

    /** Not-null value. */
    public String getUser_name() {
        return user_name;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setUser_name(String user_name) {
        this.user_name = user_name;
    }

    /** Not-null value. */
    public byte[] getEncypted_content() {
        return encypted_content;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setEncypted_content(byte[] encypted_content) {
        this.encypted_content = encypted_content;
    }

    public String getNote() {
        return note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    //parcel part
    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(site_url);
        dest.writeString(site_brief);
        dest.writeString(user_name);
        dest.writeInt(encypted_content.length);//这里不要忘了先写长度用来初始化:参见:http://stackoverflow.com/questions/11708945/tranfering-bytearray-through-parcel-returns-nullpointerexception
        dest.writeByteArray(encypted_content);
        dest.writeString(note);
        dest.writeLong(id);
    }//这里对应着看Rec(Parcel in)的构造方法


    public static final Parcelable.Creator<Rec> CREATOR = new Parcelable.Creator<Rec>() {
        @Override
        public Rec createFromParcel(Parcel in) {
            return new Rec(in);
        }

        @Override
        public Rec[] newArray(int size) {
            return new Rec[size];
        }
    };


}
